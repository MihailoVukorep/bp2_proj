-- Generated by Oracle SQL Developer Data Modeler 24.3.1.351.0831
--   at:        2025-02-05 02:21:08 CET
--   site:      Oracle Database 11g
--   type:      Oracle Database 11g



-- predefined type, no DDL - MDSYS.SDO_GEOMETRY

-- predefined type, no DDL - XMLTYPE

CREATE TABLE Barracks 
    ( 
     b_id  NUMBER  NOT NULL , 
     bb_id NUMBER  NOT NULL 
    ) 
;

ALTER TABLE Barracks 
    ADD CONSTRAINT Barracks_PK PRIMARY KEY ( b_id ) ;

ALTER TABLE Barracks 
    ADD CONSTRAINT Barracks_PKv1 UNIQUE ( bb_id ) ;

CREATE TABLE Base 
    ( 
     b_id          NUMBER  NOT NULL , 
     name          VARCHAR2 (30) , 
     Location_l_id NUMBER  NOT NULL , 
     type          VARCHAR2 (8)  NOT NULL 
    ) 
;

ALTER TABLE Base 
    ADD CONSTRAINT CH_INH_Base 
    CHECK (type IN ('Barracks', 'Base', 'Storage')) 
;

ALTER TABLE Base 
    ADD CONSTRAINT Base_PK PRIMARY KEY ( b_id ) ;

CREATE TABLE Equipment 
    ( 
     e_id                 NUMBER  NOT NULL , 
     status               NUMBER , 
     Equipment_Type_et_id NUMBER  NOT NULL , 
     Storage_bs_id        NUMBER  NOT NULL 
    ) 
;

ALTER TABLE Equipment 
    ADD CONSTRAINT Equipment_PK PRIMARY KEY ( e_id, Storage_bs_id ) ;

CREATE TABLE Equipment_Type 
    ( 
     et_id NUMBER  NOT NULL , 
     type  VARCHAR2 (256) 
    ) 
;

ALTER TABLE Equipment_Type 
    ADD CONSTRAINT Equipment_Type_PK PRIMARY KEY ( et_id ) ;

CREATE TABLE Location 
    ( 
     l_id    NUMBER  NOT NULL , 
     country VARCHAR2 (256) , 
     city    VARCHAR2 (256) 
    ) 
;

ALTER TABLE Location 
    ADD CONSTRAINT Location_PK PRIMARY KEY ( l_id ) ;

CREATE TABLE Medal 
    ( 
     sm_id                NUMBER  NOT NULL , 
     award_date           DATE , 
     description          VARCHAR2 (256) , 
     Medal_Type_smt_id    NUMBER  NOT NULL , 
     Participation_p_id   NUMBER  NOT NULL , 
     Participation_s_id1  NUMBER  NOT NULL , 
     Participation_bb_id1 NUMBER  NOT NULL 
    ) 
;
CREATE UNIQUE INDEX Medal__IDX ON Medal 
    ( 
     Participation_p_id ASC , 
     Participation_s_id1 ASC , 
     Participation_bb_id1 ASC 
    ) 
;

ALTER TABLE Medal 
    ADD CONSTRAINT Medal_PK PRIMARY KEY ( sm_id, Medal_Type_smt_id ) ;

CREATE TABLE Medal_Type 
    ( 
     smt_id NUMBER  NOT NULL , 
     name   VARCHAR2 (30) 
    ) 
;

ALTER TABLE Medal_Type 
    ADD CONSTRAINT Medal_Type_PK PRIMARY KEY ( smt_id ) ;

CREATE TABLE Mission 
    ( 
     mis_id        NUMBER  NOT NULL , 
     name          VARCHAR2 (30) , 
     description   VARCHAR2 (256) , 
     start_date    DATE , 
     end_date      DATE , 
     status        NUMBER , 
     Soldier_s_id  NUMBER  NOT NULL , 
     Location_l_id NUMBER  NOT NULL , 
     Soldier_bb_id NUMBER  NOT NULL 
    ) 
;

ALTER TABLE Mission 
    ADD CONSTRAINT Mission_PK PRIMARY KEY ( mis_id, Soldier_s_id, Soldier_bb_id ) ;

CREATE TABLE Participation 
    ( 
     p_id                  NUMBER  NOT NULL , 
     Soldier_s_id          NUMBER  NOT NULL , 
     Mission_mis_id        NUMBER  NOT NULL , 
     Mission_Soldier_s_id  NUMBER  NOT NULL , 
     Mission_Soldier_bb_id NUMBER  NOT NULL , 
     Soldier_bb_id         NUMBER  NOT NULL 
    ) 
;
CREATE UNIQUE INDEX Participation__IDX ON Participation 
    ( 
     Mission_mis_id ASC , 
     Mission_Soldier_s_id ASC , 
     Mission_Soldier_bb_id ASC 
    ) 
;

ALTER TABLE Participation 
    ADD CONSTRAINT Participation_PK PRIMARY KEY ( p_id, Soldier_s_id, Soldier_bb_id ) ;

CREATE TABLE Rank 
    ( 
     r_id        NUMBER  NOT NULL , 
     name        VARCHAR2 (30) , 
     description VARCHAR2 (256) 
    ) 
;

ALTER TABLE Rank 
    ADD CONSTRAINT Rank_PK PRIMARY KEY ( r_id ) ;

CREATE TABLE Soldier 
    ( 
     s_id            NUMBER  NOT NULL , 
     first_name      VARCHAR2 (256) , 
     last_name       VARCHAR2 (256) , 
     date_of_joining DATE , 
     Rank_r_id       NUMBER  NOT NULL , 
     Soldier_s_id    NUMBER , 
     Equipment_e_id  NUMBER , 
     Vehicle_v_id    NUMBER , 
     Vehicle_bs_id   NUMBER , 
     Equipment_bs_id NUMBER , 
     Barracks_bb_id  NUMBER  NOT NULL , 
     bb_id1          NUMBER 
    ) 
;
CREATE UNIQUE INDEX Soldier__IDX ON Soldier 
    ( 
     Vehicle_v_id ASC , 
     Vehicle_bs_id ASC 
    ) 
;

ALTER TABLE Soldier 
    ADD CONSTRAINT Soldier_PK PRIMARY KEY ( s_id, Barracks_bb_id ) ;

CREATE TABLE specializing 
    ( 
     Specialty_s_id         NUMBER  NOT NULL , 
     Soldier_s_id           NUMBER  NOT NULL , 
     Soldier_Barracks_bb_id NUMBER  NOT NULL 
    ) 
;

ALTER TABLE specializing 
    ADD CONSTRAINT specializing_PK PRIMARY KEY ( Specialty_s_id, Soldier_s_id, Soldier_Barracks_bb_id ) ;

CREATE TABLE Specialty 
    ( 
     s_id        NUMBER  NOT NULL , 
     name        VARCHAR2 (30) , 
     description VARCHAR2 (256) 
    ) 
;

ALTER TABLE Specialty 
    ADD CONSTRAINT Specialty_PK PRIMARY KEY ( s_id ) ;

CREATE TABLE Storage 
    ( 
     b_id  NUMBER  NOT NULL , 
     bs_id NUMBER  NOT NULL 
    ) 
;

ALTER TABLE Storage 
    ADD CONSTRAINT Storage_PK PRIMARY KEY ( b_id ) ;

ALTER TABLE Storage 
    ADD CONSTRAINT Storage_PKv1 UNIQUE ( bs_id ) ;

CREATE TABLE Vehicle 
    ( 
     v_id               NUMBER  NOT NULL , 
     Vehicle_Type_vt_id NUMBER  NOT NULL , 
     Soldier_s_id       NUMBER , 
     Storage_bs_id      NUMBER  NOT NULL , 
     Soldier_bb_id      NUMBER 
    ) 
;
CREATE UNIQUE INDEX Vehicle__IDX ON Vehicle 
    ( 
     Soldier_s_id ASC , 
     Soldier_bb_id ASC 
    ) 
;

ALTER TABLE Vehicle 
    ADD CONSTRAINT Vehicle_PK PRIMARY KEY ( v_id, Storage_bs_id ) ;

CREATE TABLE Vehicle_Type 
    ( 
     vt_id      NUMBER  NOT NULL , 
     model_name VARCHAR2 (256) , 
     name       VARCHAR2 (30) 
    ) 
;

ALTER TABLE Vehicle_Type 
    ADD CONSTRAINT Vehicle_Type_PK PRIMARY KEY ( vt_id ) ;

ALTER TABLE Barracks 
    ADD CONSTRAINT Barracks_Base_FK FOREIGN KEY 
    ( 
     b_id
    ) 
    REFERENCES Base 
    ( 
     b_id
    ) 
;

ALTER TABLE Base 
    ADD CONSTRAINT Base_Location_FK FOREIGN KEY 
    ( 
     Location_l_id
    ) 
    REFERENCES Location 
    ( 
     l_id
    ) 
;

ALTER TABLE Equipment 
    ADD CONSTRAINT Equipment_Equipment_Type_FK FOREIGN KEY 
    ( 
     Equipment_Type_et_id
    ) 
    REFERENCES Equipment_Type 
    ( 
     et_id
    ) 
;

ALTER TABLE Equipment 
    ADD CONSTRAINT Equipment_Storage_FK FOREIGN KEY 
    ( 
     Storage_bs_id
    ) 
    REFERENCES Storage 
    ( 
     bs_id
    ) 
;

ALTER TABLE Medal 
    ADD CONSTRAINT Medal_Medal_Type_FK FOREIGN KEY 
    ( 
     Medal_Type_smt_id
    ) 
    REFERENCES Medal_Type 
    ( 
     smt_id
    ) 
;

ALTER TABLE Medal 
    ADD CONSTRAINT Medal_Participation_FK FOREIGN KEY 
    ( 
     Participation_p_id,
     Participation_s_id1,
     Participation_bb_id1
    ) 
    REFERENCES Participation 
    ( 
     p_id,
     Soldier_s_id,
     Soldier_bb_id
    ) 
;

ALTER TABLE Mission 
    ADD CONSTRAINT Mission_Location_FK FOREIGN KEY 
    ( 
     Location_l_id
    ) 
    REFERENCES Location 
    ( 
     l_id
    ) 
;

ALTER TABLE Mission 
    ADD CONSTRAINT Mission_Soldier_FK FOREIGN KEY 
    ( 
     Soldier_s_id,
     Soldier_bb_id
    ) 
    REFERENCES Soldier 
    ( 
     s_id,
     Barracks_bb_id
    ) 
;

ALTER TABLE Participation 
    ADD CONSTRAINT Participation_Mission_FK FOREIGN KEY 
    ( 
     Mission_mis_id,
     Mission_Soldier_s_id,
     Mission_Soldier_bb_id
    ) 
    REFERENCES Mission 
    ( 
     mis_id,
     Soldier_s_id,
     Soldier_bb_id
    ) 
;

ALTER TABLE Participation 
    ADD CONSTRAINT Participation_Soldier_FK FOREIGN KEY 
    ( 
     Soldier_s_id,
     Soldier_bb_id
    ) 
    REFERENCES Soldier 
    ( 
     s_id,
     Barracks_bb_id
    ) 
;

ALTER TABLE Soldier 
    ADD CONSTRAINT Soldier_Barracks_FK FOREIGN KEY 
    ( 
     Barracks_bb_id
    ) 
    REFERENCES Barracks 
    ( 
     bb_id
    ) 
;

ALTER TABLE Soldier 
    ADD CONSTRAINT Soldier_Equipment_FK FOREIGN KEY 
    ( 
     Equipment_e_id,
     Equipment_bs_id
    ) 
    REFERENCES Equipment 
    ( 
     e_id,
     Storage_bs_id
    ) 
;

ALTER TABLE Soldier 
    ADD CONSTRAINT Soldier_Rank_FK FOREIGN KEY 
    ( 
     Rank_r_id
    ) 
    REFERENCES Rank 
    ( 
     r_id
    ) 
;

ALTER TABLE Soldier 
    ADD CONSTRAINT Soldier_Soldier_FK FOREIGN KEY 
    ( 
     Soldier_s_id
    ) 
    REFERENCES Soldier 
    ( 
     s_id,
     Barracks_bb_id
    ) 
;

ALTER TABLE Soldier 
    ADD CONSTRAINT Soldier_Vehicle_FK FOREIGN KEY 
    ( 
     Vehicle_v_id,
     Vehicle_bs_id
    ) 
    REFERENCES Vehicle 
    ( 
     v_id,
     Storage_bs_id
    ) 
;

ALTER TABLE specializing 
    ADD CONSTRAINT specializing_Soldier_FK FOREIGN KEY 
    ( 
     Soldier_s_id,
     Soldier_Barracks_bb_id
    ) 
    REFERENCES Soldier 
    ( 
     s_id,
     Barracks_bb_id
    ) 
;

ALTER TABLE specializing 
    ADD CONSTRAINT specializing_Specialty_FK FOREIGN KEY 
    ( 
     Specialty_s_id
    ) 
    REFERENCES Specialty 
    ( 
     s_id
    ) 
;

ALTER TABLE Storage 
    ADD CONSTRAINT Storage_Base_FK FOREIGN KEY 
    ( 
     b_id
    ) 
    REFERENCES Base 
    ( 
     b_id
    ) 
;

ALTER TABLE Vehicle 
    ADD CONSTRAINT Vehicle_Soldier_FK FOREIGN KEY 
    ( 
     Soldier_s_id,
     Soldier_bb_id
    ) 
    REFERENCES Soldier 
    ( 
     s_id,
     Barracks_bb_id
    ) 
;

ALTER TABLE Vehicle 
    ADD CONSTRAINT Vehicle_Storage_FK FOREIGN KEY 
    ( 
     Storage_bs_id
    ) 
    REFERENCES Storage 
    ( 
     bs_id
    ) 
;

ALTER TABLE Vehicle 
    ADD CONSTRAINT Vehicle_Vehicle_Type_FK FOREIGN KEY 
    ( 
     Vehicle_Type_vt_id
    ) 
    REFERENCES Vehicle_Type 
    ( 
     vt_id
    ) 
;

CREATE OR REPLACE TRIGGER ARC_FKArc_1_Storage 
BEFORE INSERT OR UPDATE OF b_id 
ON Storage 
FOR EACH ROW 
DECLARE 
    d VARCHAR2 (8); 
BEGIN 
    SELECT A.type INTO d 
    FROM Base A 
    WHERE A.b_id = :new.b_id; 
    IF (d IS NULL OR d <> 'Storage') THEN 
        raise_application_error(-20223,'FK Storage_Base_FK in Table Storage violates Arc constraint on Table Base - discriminator column type doesn''t have value ''Storage'''); 
    END IF; 
    EXCEPTION 
    WHEN NO_DATA_FOUND THEN 
        NULL; 
    WHEN OTHERS THEN 
        RAISE; 
END; 
/

CREATE OR REPLACE TRIGGER ARC_FKArc_1_Barracks 
BEFORE INSERT OR UPDATE OF b_id 
ON Barracks 
FOR EACH ROW 
DECLARE 
    d VARCHAR2 (8); 
BEGIN 
    SELECT A.type INTO d 
    FROM Base A 
    WHERE A.b_id = :new.b_id; 
    IF (d IS NULL OR d <> 'Barracks') THEN 
        raise_application_error(-20223,'FK Barracks_Base_FK in Table Barracks violates Arc constraint on Table Base - discriminator column type doesn''t have value ''Barracks'''); 
    END IF; 
    EXCEPTION 
    WHEN NO_DATA_FOUND THEN 
        NULL; 
    WHEN OTHERS THEN 
        RAISE; 
END; 
/



-- Oracle SQL Developer Data Modeler Summary Report: 
-- 
-- CREATE TABLE                            16
-- CREATE INDEX                             4
-- ALTER TABLE                             40
-- CREATE VIEW                              0
-- ALTER VIEW                               0
-- CREATE PACKAGE                           0
-- CREATE PACKAGE BODY                      0
-- CREATE PROCEDURE                         0
-- CREATE FUNCTION                          0
-- CREATE TRIGGER                           2
-- ALTER TRIGGER                            0
-- CREATE COLLECTION TYPE                   0
-- CREATE STRUCTURED TYPE                   0
-- CREATE STRUCTURED TYPE BODY              0
-- CREATE CLUSTER                           0
-- CREATE CONTEXT                           0
-- CREATE DATABASE                          0
-- CREATE DIMENSION                         0
-- CREATE DIRECTORY                         0
-- CREATE DISK GROUP                        0
-- CREATE ROLE                              0
-- CREATE ROLLBACK SEGMENT                  0
-- CREATE SEQUENCE                          0
-- CREATE MATERIALIZED VIEW                 0
-- CREATE MATERIALIZED VIEW LOG             0
-- CREATE SYNONYM                           0
-- CREATE TABLESPACE                        0
-- CREATE USER                              0
-- 
-- DROP TABLESPACE                          0
-- DROP DATABASE                            0
-- 
-- REDACTION POLICY                         0
-- 
-- ORDS DROP SCHEMA                         0
-- ORDS ENABLE SCHEMA                       0
-- ORDS ENABLE OBJECT                       0
-- 
-- ERRORS                                   0
-- WARNINGS                                 0
